name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: |
          backend/package-lock.json
          frontend/package-lock.json
    
    # Backend tests
    - name: Install backend dependencies
      run: npm install
      working-directory: ./backend
      
    - name: Test backend
      run: npm run test
      working-directory: ./backend
    
    # Frontend tests  
    - name: Install frontend dependencies
      run: npm install
      working-directory: ./frontend
      
    - name: Test frontend
      run: npm run test -- --watch=false --browsers=ChromeHeadless
      working-directory: ./frontend
      continue-on-error: true

  build-and-push:
    name: Build & Push Images
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    outputs:
      sha_short: ${{ steps.vars.outputs.sha_short }}

    steps:
    - uses: actions/checkout@v4
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Get commit SHA
      id: vars
      run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
    
    - name: Build and push backend
      run: |
        docker build -t sicardflorent/projet-eni:backend-${{ steps.vars.outputs.sha_short }} ./backend
        docker push sicardflorent/projet-eni:backend-${{ steps.vars.outputs.sha_short }}
    
    - name: Build and push frontend
      run: |
        docker build -t sicardflorent/projet-eni:frontend-${{ steps.vars.outputs.sha_short }} ./frontend
        docker push sicardflorent/projet-eni:frontend-${{ steps.vars.outputs.sha_short }}

  deploy:
    name: Deploy to AKS
    if: github.ref == 'refs/heads/main'
    needs: [ test, build-and-push ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        
      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        
      - name: Set kubeconfig
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > ~/.kube/config
          chmod 600 ~/.kube/config
        
      - name: Update backend image
        run: |
          sed -i 's|image: sicardflorent/projet-eni:backend-.*|image: sicardflorent/projet-eni:backend-${{ needs.build-and-push.outputs.sha_short }}|' k8s/backend.yaml
        
      - name: Update frontend image  
        run: |
          sed -i 's|image: sicardflorent/projet-eni:frontend-.*|image: sicardflorent/projet-eni:frontend-${{ needs.build-and-push.outputs.sha_short }}|' k8s/frontend.yaml
        
      - name: Deploy backend
        run: kubectl apply -f k8s/backend.yaml
        
      - name: Deploy frontend
        run: kubectl apply -f k8s/frontend.yaml
        
      - name: Check deployment status
        run: |
          kubectl get pods -n projet-eni
          kubectl rollout status deployment/backend-deployment -n projet-eni --timeout=120s
          kubectl rollout status deployment/frontend-deployment -n projet-eni --timeout=120s     
